{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/data.service.ts","./src/app/forum/forum.component.ts","./src/app/forum/forum.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'forum-client';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatSelectModule} from '@angular/material/select';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ForumComponent } from './forum/forum.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ForumComponent\n  ],\n  imports: [\n    MatToolbarModule, \n    MatButtonModule, \n    MatCardModule, \n    MatInputModule, \n    MatDialogModule, \n    MatTableModule, \n    MatMenuModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n    FlexLayoutModule,\n    FormsModule, \n    ReactiveFormsModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      {path: 'login', component: LoginComponent},\n      {path: '', redirectTo: 'login', pathMatch: 'full'},\n      {path: 'forum', component: ForumComponent}\n  ])\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  userID: number;\n  userName: string;\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-forum',\n  templateUrl: './forum.component.html',\n  styleUrls: ['./forum.component.scss']\n})\nexport class ForumComponent implements OnInit {\n\n  ws: WebSocket;\n  threadsData = [];\n\n  constructor(private http: HttpClient, private dataService: DataService) { \n    this.ws = new WebSocket('ws:localhost:3001');\n    this.ws.addEventListener('message', (event) => {\n      if (event.data) {\n        let tempArray = JSON.parse(event.data);\n        if (tempArray) {\n          this.threadsData = tempArray.slice().reverse();\n        }\n        \n      }\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  addComment(threadForm, threadNumber) {\n    let message = {\n      userName: this.dataService.userName,\n      userID: this.dataService.userID,\n      threadID: this.threadsData[threadNumber].ID,\n      text: threadForm.value.comment\n    }\n    this.http.post('api/Comment', {message}).subscribe(response => {\n      console.log(response);\n    });\n  }\n\n  addThread(threadForm) {\n    let message = {\n      userName: this.dataService.userName,\n      userID: this.dataService.userID,\n      text: threadForm.value.thread\n    }\n    this.http.post('api/Thread', {message}).subscribe(response => {\n      console.log(response);\n    });\n  }\n}\n","<div class=\"threads-wrapper\">\n    <mat-card class=\"box\" *ngFor=\"let thread of threadsData; index as threadNumber\">\n        <mat-card-header>\n            <mat-card-title>{{'From: ' + thread.Username}}</mat-card-title>\n            <div class=\"thread-time\">\n                {{thread.Timestamp}}\n            </div>\n            <div class=\"thread-text\">\n                {{thread.Text}}\n            </div>\n            \n        </mat-card-header>\n        <div class=\"comment-text\" *ngFor=\"let comment of thread.comments\">\n            {{comment.Username + ': ' + comment.Text + '|   ' + comment.Timestamp}}\n        </div>\n        <form #commentForm=\"ngForm\" class=\"comment-form\" (ngSubmit)=\"addComment(commentForm, threadNumber)\">\n          <mat-card-content>\n            <mat-form-field class=\"thread-full-width\">\n              <input matInput name=\"comment\" placeholder=\"Comment\" ngModel>\n            </mat-form-field>\n          </mat-card-content>\n          <button mat-stroked-button  class=\"btn-block\" type=\"submit\">Submit</button>\n        </form>\n      </mat-card>\n      <form #threadForm=\"ngForm\" class=\"thread-form\" (ngSubmit)=\"addThread(threadForm)\">\n        <mat-card-content>\n          <mat-form-field class=\"thread-full-width\">\n            <input matInput name=\"thread\" placeholder=\"New Thread\" ngModel>\n          </mat-form-field>\n        </mat-card-content>\n        <button mat-stroked-button  class=\"btn-block\" type=\"submit\">Submit</button>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private http: HttpClient, private router: Router, private dataService: DataService) { }\n\n  ngOnInit(): void {\n  }\n\n  submit(form) {\n    this.dataService.userName = form.value.userName;\n    this.http.post('api/Users', {userName: form.value.userName}).subscribe(response => {\n      console.log(response);\n      this.dataService.userID = response['ID'];\n    });\n    this.router.navigate(['/forum']);\n  }\n}\n","<div class=\"login-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n\n    <mat-card class=\"box\">\n      <mat-card-header>\n        <mat-card-title>Log in</mat-card-title>\n      </mat-card-header>\n  \n      <form #loginForm=\"ngForm\" class=\"login-form\" (ngSubmit)=\"submit(loginForm)\">\n        <mat-card-content>\n          <mat-form-field class=\"login-full-width\">\n            <input matInput name=\"userName\" placeholder=\"Username\" ngModel>\n          </mat-form-field>\n        </mat-card-content>\n        <button mat-stroked-button color=\"accent\" class=\"btn-block\" type=\"submit\">Log in</button>\n      </form>\n    </mat-card>\n  \n  </div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}