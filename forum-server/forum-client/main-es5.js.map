{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/data.service.ts","webpack:///src/app/forum/forum.component.ts","webpack:///src/app/forum/forum.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","forRoot","path","component","redirectTo","pathMatch","declarations","imports","providers","bootstrap","DataService","providedIn","ForumComponent","http","dataService","threadsData","ws","WebSocket","addEventListener","event","data","tempArray","JSON","parse","slice","reverse","threadForm","threadNumber","message","userName","userID","threadID","ID","text","value","comment","post","subscribe","response","console","log","thread","addThread","LoginComponent","router","form","navigate","submit","environment","production","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'forum-client';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatSelectModule} from '@angular/material/select';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ForumComponent } from './forum/forum.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ForumComponent\n  ],\n  imports: [\n    MatToolbarModule, \n    MatButtonModule, \n    MatCardModule, \n    MatInputModule, \n    MatDialogModule, \n    MatTableModule, \n    MatMenuModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n    FlexLayoutModule,\n    FormsModule, \n    ReactiveFormsModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      {path: 'login', component: LoginComponent},\n      {path: '', redirectTo: 'login', pathMatch: 'full'},\n      {path: 'forum', component: ForumComponent}\n  ])\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  userID: number;\n  userName: string;\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-forum',\n  templateUrl: './forum.component.html',\n  styleUrls: ['./forum.component.scss']\n})\nexport class ForumComponent implements OnInit {\n\n  ws: WebSocket;\n  threadsData = [];\n\n  constructor(private http: HttpClient, private dataService: DataService) { \n    this.ws = new WebSocket('ws:localhost:3001');\n    this.ws.addEventListener('message', (event) => {\n      if (event.data) {\n        let tempArray = JSON.parse(event.data);\n        if (tempArray) {\n          this.threadsData = tempArray.slice().reverse();\n        }\n        \n      }\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  addComment(threadForm, threadNumber) {\n    let message = {\n      userName: this.dataService.userName,\n      userID: this.dataService.userID,\n      threadID: this.threadsData[threadNumber].ID,\n      text: threadForm.value.comment\n    }\n    this.http.post('api/Comment', {message}).subscribe(response => {\n      console.log(response);\n    });\n  }\n\n  addThread(threadForm) {\n    let message = {\n      userName: this.dataService.userName,\n      userID: this.dataService.userID,\n      text: threadForm.value.thread\n    }\n    this.http.post('api/Thread', {message}).subscribe(response => {\n      console.log(response);\n    });\n  }\n}\n","<div class=\"threads-wrapper\">\n    <mat-card class=\"box\" *ngFor=\"let thread of threadsData; index as threadNumber\">\n        <mat-card-header>\n            <mat-card-title>{{'From: ' + thread.Username}}</mat-card-title>\n            <div class=\"thread-time\">\n                {{thread.Timestamp}}\n            </div>\n            <div class=\"thread-text\">\n                {{thread.Text}}\n            </div>\n            \n        </mat-card-header>\n        <div class=\"comment-text\" *ngFor=\"let comment of thread.comments\">\n            {{comment.Username + ': ' + comment.Text + '|   ' + comment.Timestamp}}\n        </div>\n        <form #commentForm=\"ngForm\" class=\"comment-form\" (ngSubmit)=\"addComment(commentForm, threadNumber)\">\n          <mat-card-content>\n            <mat-form-field class=\"thread-full-width\">\n              <input matInput name=\"comment\" placeholder=\"Comment\" ngModel>\n            </mat-form-field>\n          </mat-card-content>\n          <button mat-stroked-button  class=\"btn-block\" type=\"submit\">Submit</button>\n        </form>\n      </mat-card>\n      <form #threadForm=\"ngForm\" class=\"thread-form\" (ngSubmit)=\"addThread(threadForm)\">\n        <mat-card-content>\n          <mat-form-field class=\"thread-full-width\">\n            <input matInput name=\"thread\" placeholder=\"New Thread\" ngModel>\n          </mat-form-field>\n        </mat-card-content>\n        <button mat-stroked-button  class=\"btn-block\" type=\"submit\">Submit</button>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private http: HttpClient, private router: Router, private dataService: DataService) { }\n\n  ngOnInit(): void {\n  }\n\n  submit(form) {\n    this.dataService.userName = form.value.userName;\n    this.http.post('api/Users', {userName: form.value.userName}).subscribe(response => {\n      console.log(response);\n      this.dataService.userID = response['ID'];\n    });\n    this.router.navigate(['/forum']);\n  }\n}\n","<div class=\"login-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n\n    <mat-card class=\"box\">\n      <mat-card-header>\n        <mat-card-title>Log in</mat-card-title>\n      </mat-card-header>\n  \n      <form #loginForm=\"ngForm\" class=\"login-form\" (ngSubmit)=\"submit(loginForm)\">\n        <mat-card-content>\n          <mat-form-field class=\"login-full-width\">\n            <input matInput name=\"userName\" placeholder=\"Username\" ngModel>\n          </mat-form-field>\n        </mat-card-content>\n        <button mat-stroked-button color=\"accent\" class=\"btn-block\" type=\"submit\">Log in</button>\n      </form>\n    </mat-card>\n  \n  </div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}